{"ast":null,"code":"var _jsxFileName = \"/Users/vilhelmgroenbaek/DevProjects/webAppForCV/frontend/src/HistogramGroup.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport React from \"react\";\nimport Rectangle from \"./Rectangle.\"; // Add this import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MARGIN = {\n  top: 30,\n  right: 30,\n  bottom: 40,\n  left: 50\n};\nconst BUCKET_NUMBER = 70;\nconst BUCKET_PADDING = 4;\nconst COLORS = [\"#e0ac2b\", \"#e85252\", \"#6689c6\", \"#9a6fb0\", \"#a53253\"];\nexport const HistogramGroup = ({\n  width,\n  height,\n  data\n}) => {\n  _s();\n  const axesRef = useRef(null);\n  const boundsWidth = width - MARGIN.right - MARGIN.left;\n  const boundsHeight = height - MARGIN.top - MARGIN.bottom;\n  const allGroupNames = data.map(group => group.name);\n  const colorScale = d3.scaleOrdinal().domain(allGroupNames).range(COLORS);\n  const xScale = useMemo(() => {\n    const maxPerGroup = data.map(group => Math.max(...group.values));\n    const max = Math.max(...maxPerGroup);\n    return d3.scaleLinear().domain([0, max]).range([10, boundsWidth]).nice();\n  }, [data, width]);\n  const bucketGenerator = useMemo(() => {\n    return d3.bin().value(d => d).domain(xScale.domain()).thresholds(xScale.ticks(BUCKET_NUMBER));\n  }, [xScale]);\n  const groupBuckets = useMemo(() => {\n    return data.map(group => {\n      return {\n        name: group.name,\n        buckets: bucketGenerator(group.values)\n      };\n    });\n  }, [data, bucketGenerator]);\n  const yScale = useMemo(() => {\n    const max = Math.max(...groupBuckets.map(group => Math.max(...group.buckets.map(bucket => bucket.length))));\n    return d3.scaleLinear().range([boundsHeight, 0]).domain([0, max]).nice();\n  }, [groupBuckets, height]);\n\n  // Render axes using D3\n  useEffect(() => {\n    const svgElement = d3.select(axesRef.current);\n    svgElement.selectAll(\"*\").remove();\n    const xAxisGenerator = d3.axisBottom(xScale);\n    svgElement.append(\"g\").attr(\"transform\", `translate(0,${boundsHeight})`).call(xAxisGenerator);\n    const yAxisGenerator = d3.axisLeft(yScale);\n    svgElement.append(\"g\").call(yAxisGenerator);\n  }, [xScale, yScale, boundsHeight]);\n  const allRects = groupBuckets.map((group, i) => group.buckets.map((bucket, j) => {\n    const {\n      x0,\n      x1\n    } = bucket;\n    if (x0 === undefined || x1 === undefined) return null;\n    return /*#__PURE__*/_jsxDEV(Rectangle, {\n      fill: colorScale(group.name),\n      x: xScale(x0) + BUCKET_PADDING / 2,\n      width: xScale(x1) - xScale(x0) - BUCKET_PADDING,\n      y: yScale(bucket.length),\n      height: boundsHeight - yScale(bucket.length)\n    }, `${i}_${j}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  }));\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: [/*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${MARGIN.left},${MARGIN.top})`,\n      children: allRects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      ref: axesRef,\n      transform: `translate(${MARGIN.left},${MARGIN.top})`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(HistogramGroup, \"VItzWw56gDN0uCd8DlFNSNSTkkc=\");\n_c = HistogramGroup;\nexport default HistogramGroup;\nvar _c;\n$RefreshReg$(_c, \"HistogramGroup\");","map":{"version":3,"names":["useEffect","useMemo","useRef","d3","React","Rectangle","jsxDEV","_jsxDEV","MARGIN","top","right","bottom","left","BUCKET_NUMBER","BUCKET_PADDING","COLORS","HistogramGroup","width","height","data","_s","axesRef","boundsWidth","boundsHeight","allGroupNames","map","group","name","colorScale","scaleOrdinal","domain","range","xScale","maxPerGroup","Math","max","values","scaleLinear","nice","bucketGenerator","bin","value","d","thresholds","ticks","groupBuckets","buckets","yScale","bucket","length","svgElement","select","current","selectAll","remove","xAxisGenerator","axisBottom","append","attr","call","yAxisGenerator","axisLeft","allRects","i","j","x0","x1","undefined","fill","x","y","fileName","_jsxFileName","lineNumber","columnNumber","children","transform","ref","_c","$RefreshReg$"],"sources":["/Users/vilhelmgroenbaek/DevProjects/webAppForCV/frontend/src/HistogramGroup.tsx"],"sourcesContent":["import { useEffect, useMemo, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport React from \"react\";\nimport Rectangle from \"./Rectangle.\";  // Add this import\n\nconst MARGIN = { top: 30, right: 30, bottom: 40, left: 50 };\nconst BUCKET_NUMBER = 70;\nconst BUCKET_PADDING = 4;\nconst COLORS = [\"#e0ac2b\", \"#e85252\", \"#6689c6\", \"#9a6fb0\", \"#a53253\"];\n\ntype Group = { name: string; values: number[] };\ntype HistogramGroupProps = {\n  width: number;\n  height: number;\n  data: Group[];\n};\n\nexport const HistogramGroup = ({ width, height, data }: HistogramGroupProps) => {\n  const axesRef = useRef(null);\n  const boundsWidth = width - MARGIN.right - MARGIN.left;\n  const boundsHeight = height - MARGIN.top - MARGIN.bottom;\n\n  const allGroupNames = data.map((group) => group.name);\n  const colorScale = d3\n    .scaleOrdinal<string>()\n    .domain(allGroupNames)\n    .range(COLORS);\n\n  const xScale = useMemo(() => {\n    const maxPerGroup = data.map((group) => Math.max(...group.values));\n    const max = Math.max(...maxPerGroup);\n    return d3.scaleLinear().domain([0, max]).range([10, boundsWidth]).nice();\n  }, [data, width]);\n\n  const bucketGenerator = useMemo(() => {\n    return d3\n      .bin()\n      .value((d) => d)\n      .domain(xScale.domain() as [number, number])\n      .thresholds(xScale.ticks(BUCKET_NUMBER));\n  }, [xScale]);\n\n  const groupBuckets = useMemo(() => {\n    return data.map((group) => {\n      return { name: group.name, buckets: bucketGenerator(group.values) };\n    });\n  }, [data, bucketGenerator]);\n\n  const yScale = useMemo(() => {\n    const max = Math.max(\n      ...groupBuckets.map((group) =>\n        Math.max(...group.buckets.map((bucket) => bucket.length))\n      )\n    );\n    return d3.scaleLinear().range([boundsHeight, 0]).domain([0, max]).nice();\n  }, [groupBuckets, height]);\n\n  // Render axes using D3\n  useEffect(() => {\n    const svgElement = d3.select(axesRef.current);\n    svgElement.selectAll(\"*\").remove();\n\n    const xAxisGenerator = d3.axisBottom(xScale);\n    svgElement\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${boundsHeight})`)\n      .call(xAxisGenerator);\n\n    const yAxisGenerator = d3.axisLeft(yScale);\n    svgElement.append(\"g\").call(yAxisGenerator);\n  }, [xScale, yScale, boundsHeight]);\n\n  const allRects = groupBuckets.map((group, i) =>\n    group.buckets.map((bucket, j) => {\n      const { x0, x1 } = bucket;\n      if (x0 === undefined || x1 === undefined) return null;\n      return (\n        <Rectangle\n          key={`${i}_${j}`}\n          fill={colorScale(group.name)}\n          x={xScale(x0) + BUCKET_PADDING / 2}\n          width={xScale(x1) - xScale(x0) - BUCKET_PADDING}\n          y={yScale(bucket.length)}\n          height={boundsHeight - yScale(bucket.length)}\n        />\n      );\n    })\n  );\n\n  return (\n    <svg width={width} height={height}>\n      <g transform={`translate(${MARGIN.left},${MARGIN.top})`}>\n        {allRects}\n      </g>\n      <g ref={axesRef} transform={`translate(${MARGIN.left},${MARGIN.top})`} />\n    </svg>\n  );\n};\n\n\nexport default HistogramGroup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}