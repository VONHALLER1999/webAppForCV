{"ast":null,"code":"var _jsxFileName = \"/Users/vilhelmgroenbaek/DevProjects/webAppForCV/frontend/src/CombinedHistogram.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useMemo } from \"react\";\nimport HistogramSingle from \"./HistogramSingle.tsx\";\nimport HistogramGroup from \"./HistogramGroup.tsx\";\nimport React from \"react\";\n\n// Assume these two datasets are coming from your backend response\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CombinedHistogram = ({\n  width,\n  height,\n  unhedged,\n  option\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"both\");\n\n  // Calculate shared domain for consistent scaling\n  const domain = useMemo(() => {\n    const allValues = [...unhedged, ...option];\n    const min = Math.min(...allValues);\n    const max = Math.max(...allValues);\n    return [min, max];\n  }, [unhedged, option]);\n  const renderHistogram = () => {\n    const sharedProps = {\n      width,\n      height,\n      domain,\n      key: mode // Add key to force proper remounting\n    };\n    if (mode === \"both\") {\n      const groups = [{\n        name: \"Unhedged\",\n        values: unhedged\n      }, {\n        name: \"Option\",\n        values: option\n      }];\n      return /*#__PURE__*/_jsxDEV(HistogramGroup, {\n        width: width,\n        height: height,\n        data: groups,\n        domain: domain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n    } else if (mode === \"unhedged\") {\n      return /*#__PURE__*/_jsxDEV(HistogramSingle, {\n        width: width,\n        height: height,\n        data: unhedged,\n        domain: domain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    } else if (mode === \"option\") {\n      return /*#__PURE__*/_jsxDEV(HistogramSingle, {\n        width: width,\n        height: height,\n        data: option,\n        domain: domain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const buttonStyle = {\n    border: \"1px solid #9a6fb0\",\n    borderRadius: \"3px\",\n    padding: \"0px 8px\",\n    margin: \"10px 2px\",\n    fontSize: 14,\n    color: \"#9a6fb0\",\n    opacity: 0.7\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => setMode(\"unhedged\"),\n        children: \"Unhedged Revenue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => setMode(\"option\"),\n        children: \"Option Revenue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => setMode(\"both\"),\n        children: \"Both\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), renderHistogram()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(CombinedHistogram, \"YsgsbIVS6G3sgTksGBBrk2OgmUc=\");\n_c = CombinedHistogram;\nexport default CombinedHistogram;\nvar _c;\n$RefreshReg$(_c, \"CombinedHistogram\");","map":{"version":3,"names":["useState","useMemo","HistogramSingle","HistogramGroup","React","jsxDEV","_jsxDEV","CombinedHistogram","width","height","unhedged","option","_s","mode","setMode","domain","allValues","min","Math","max","renderHistogram","sharedProps","key","groups","name","values","data","fileName","_jsxFileName","lineNumber","columnNumber","buttonStyle","border","borderRadius","padding","margin","fontSize","color","opacity","children","style","marginBottom","onClick","_c","$RefreshReg$"],"sources":["/Users/vilhelmgroenbaek/DevProjects/webAppForCV/frontend/src/CombinedHistogram.tsx"],"sourcesContent":["import { useState, useMemo } from \"react\";\nimport HistogramSingle from \"./HistogramSingle.tsx\";\nimport HistogramGroup from \"./HistogramGroup.tsx\";\nimport React from \"react\";\n\n\n// Assume these two datasets are coming from your backend response\ntype CombinedHistogramProps = {\n  width: number;\n  height: number;\n  unhedged: number[];\n  option: number[];\n};\nexport const CombinedHistogram = ({ width, height, unhedged, option }: CombinedHistogramProps) => {\n\n  const [mode, setMode] = useState<\"unhedged\" | \"option\" | \"both\">(\"both\");\n\n  // Calculate shared domain for consistent scaling\n  const domain = useMemo(() => {\n    const allValues = [...unhedged, ...option];\n    const min = Math.min(...allValues);\n    const max = Math.max(...allValues);\n    return [min, max] as [number, number];\n  }, [unhedged, option]);\n\n  const renderHistogram = () => {\n    const sharedProps = {\n      width,\n      height,\n      domain,\n      key: mode // Add key to force proper remounting\n    };\n\n    if (mode === \"both\") {\n      const groups = [\n        { name: \"Unhedged\", values: unhedged },\n        { name: \"Option\", values: option },\n      ];\n      return <HistogramGroup width={width} height={height} data={groups} domain={domain} />;\n    } else if (mode === \"unhedged\") {\n      return <HistogramSingle width={width} height={height} data={unhedged} domain={domain} />;\n    } else if (mode === \"option\") {\n      return <HistogramSingle width={width} height={height} data={option} domain={domain} />;\n    }\n  };\n  const buttonStyle = {\n    border: \"1px solid #9a6fb0\",\n    borderRadius: \"3px\",\n    padding: \"0px 8px\",\n    margin: \"10px 2px\",\n    fontSize: 14,\n    color: \"#9a6fb0\",\n    opacity: 0.7,\n  };\n\n  return (\n    <div>\n      <div style={{ marginBottom: \"10px\" }}>\n        <button style={buttonStyle} onClick={() => setMode(\"unhedged\")}>\n          Unhedged Revenue\n        </button>\n        <button style={buttonStyle} onClick={() => setMode(\"option\")}>\n          Option Revenue\n        </button>\n        <button style={buttonStyle} onClick={() => setMode(\"both\")}>\n          Both\n        </button>\n      </div>\n      {renderHistogram()}\n    </div>\n  );\n};\n\nexport default CombinedHistogram;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}