{"ast":null,"code":"var _jsxFileName = \"/Users/vilhelmgroenbaek/DevProjects/webAppForCV/frontend/src/Rectangle.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Rectangle = props => {\n  _s();\n  const {\n    x,\n    y,\n    width,\n    height,\n    fill = \"#9d174d\"\n  } = props;\n  const springProps = useSpring({\n    from: {\n      x,\n      y: height,\n      // Start from the bottom\n      width,\n      height: 0 // Start with zero height\n    },\n    to: {\n      x,\n      y,\n      width,\n      height\n    },\n    config: {\n      mass: 1,\n      tension: 180,\n      friction: 12\n    }\n  });\n\n  // Cast animated.rect to a component that accepts x, y, width, and height as either a number or a spring value.\n  const AnimatedRect = animated.rect;\n  return /*#__PURE__*/_jsxDEV(animated.rect, {\n    style: {\n      x: springProps.x,\n      y: springProps.y,\n      width: springProps.width,\n      height: springProps.height,\n      opacity: 0.7\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Rectangle, \"wpSV0FC/toaPbJBGpESKHDbUyLQ=\", false, function () {\n  return [useSpring];\n});\n_c = Rectangle;\nexport default Rectangle;\nvar _c;\n$RefreshReg$(_c, \"Rectangle\");","map":{"version":3,"names":["React","useSpring","animated","jsxDEV","_jsxDEV","Rectangle","props","_s","x","y","width","height","fill","springProps","from","to","config","mass","tension","friction","AnimatedRect","rect","style","opacity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vilhelmgroenbaek/DevProjects/webAppForCV/frontend/src/Rectangle.tsx"],"sourcesContent":["import React from \"react\";\nimport { useSpring, animated } from \"@react-spring/web\";\n\ntype RectangleProps = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  fill?: string;\n};\n\nexport const Rectangle = (props: RectangleProps) => {\n  const { x, y, width, height, fill = \"#9d174d\" } = props;\n\n  const springProps = useSpring({\n    from: { \n      x, \n      y: height, // Start from the bottom\n      width,\n      height: 0 // Start with zero height\n    },\n    to: { \n      x,\n      y,\n      width,\n      height\n    },\n    config: { \n      mass: 1,\n      tension: 180,\n      friction: 12\n    }\n  });\n\n  // Cast animated.rect to a component that accepts x, y, width, and height as either a number or a spring value.\n  const AnimatedRect = animated.rect as React.FC<\n    React.SVGProps<SVGRectElement> & {\n      x: number | typeof springProps.x;\n      y: number | typeof springProps.y;\n      width: number | typeof springProps.width;\n      height: number | typeof springProps.height;\n    }\n  >;\n\n  return (\n    <animated.rect\n      style={{\n        x: springProps.x,\n        y: springProps.y,\n        width: springProps.width,\n        height: springProps.height,\n        opacity: 0.7,\n        \n      }}\n    />\n  );\n};\n\nexport default Rectangle;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUxD,OAAO,MAAMC,SAAS,GAAIC,KAAqB,IAAK;EAAAC,EAAA;EAClD,MAAM;IAAEC,CAAC;IAAEC,CAAC;IAAEC,KAAK;IAAEC,MAAM;IAAEC,IAAI,GAAG;EAAU,CAAC,GAAGN,KAAK;EAEvD,MAAMO,WAAW,GAAGZ,SAAS,CAAC;IAC5Ba,IAAI,EAAE;MACJN,CAAC;MACDC,CAAC,EAAEE,MAAM;MAAE;MACXD,KAAK;MACLC,MAAM,EAAE,CAAC,CAAC;IACZ,CAAC;IACDI,EAAE,EAAE;MACFP,CAAC;MACDC,CAAC;MACDC,KAAK;MACLC;IACF,CAAC;IACDK,MAAM,EAAE;MACNC,IAAI,EAAE,CAAC;MACPC,OAAO,EAAE,GAAG;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAGlB,QAAQ,CAACmB,IAO7B;EAED,oBACEjB,OAAA,CAACF,QAAQ,CAACmB,IAAI;IACZC,KAAK,EAAE;MACLd,CAAC,EAAEK,WAAW,CAACL,CAAC;MAChBC,CAAC,EAAEI,WAAW,CAACJ,CAAC;MAChBC,KAAK,EAAEG,WAAW,CAACH,KAAK;MACxBC,MAAM,EAAEE,WAAW,CAACF,MAAM;MAC1BY,OAAO,EAAE;IAEX;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACpB,EAAA,CA7CWF,SAAS;EAAA,QAGAJ,SAAS;AAAA;AAAA2B,EAAA,GAHlBvB,SAAS;AA+CtB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}