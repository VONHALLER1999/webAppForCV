{"ast":null,"code":"import{useState,useMemo}from\"react\";import HistogramSingle from\"./HistogramSingle.tsx\";import HistogramGroup from\"./HistogramGroup.tsx\";import React from\"react\";import\"./CombinedHistogram.css\";// Assume these two datasets are coming from your backend response\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const CombinedHistogram=_ref=>{let{width,height,unhedged,option}=_ref;const[mode,setMode]=useState(\"both\");// Calculate shared domain for consistent scaling\nconst domain=useMemo(()=>{const allValues=[...unhedged,...option];const min=Math.min(...allValues);const max=Math.max(...allValues);return[min,max];},[unhedged,option]);const renderHistogram=()=>{const sharedProps={width,height,domain};if(mode===\"both\"){const groups=[{name:\"Unhedged\",values:unhedged,id:\"unhedged\"},{name:\"Option\",values:option,id:\"option\"}];return/*#__PURE__*/_jsx(HistogramGroup,{...sharedProps,data:groups});}else if(mode===\"unhedged\"){return/*#__PURE__*/_jsx(HistogramSingle,{...sharedProps,data:unhedged,groupId:\"unhedged\"});}else if(mode===\"option\"){return/*#__PURE__*/_jsx(HistogramSingle,{...sharedProps,data:option,groupId:\"option\"});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"histogram-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{className:`histogram-button ${mode===\"unhedged\"?\"active\":\"\"}`,onClick:()=>setMode(\"unhedged\"),children:\"Unhedged Revenue\"}),/*#__PURE__*/_jsx(\"button\",{className:`histogram-button ${mode===\"option\"?\"active\":\"\"}`,onClick:()=>setMode(\"option\"),children:\"Option Revenue\"}),/*#__PURE__*/_jsx(\"button\",{className:`histogram-button ${mode===\"both\"?\"active\":\"\"}`,onClick:()=>setMode(\"both\"),children:\"Both\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{position:'relative',width,height},children:renderHistogram()})]});};export default CombinedHistogram;","map":{"version":3,"names":["useState","useMemo","HistogramSingle","HistogramGroup","React","jsx","_jsx","jsxs","_jsxs","CombinedHistogram","_ref","width","height","unhedged","option","mode","setMode","domain","allValues","min","Math","max","renderHistogram","sharedProps","groups","name","values","id","data","groupId","className","children","onClick","style","position"],"sources":["/Users/vilhelmgroenbaek/DevProjects/webAppForCV/frontend/src/CombinedHistogram.tsx"],"sourcesContent":["import { useState, useMemo } from \"react\";\nimport HistogramSingle from \"./HistogramSingle.tsx\";\nimport HistogramGroup from \"./HistogramGroup.tsx\";\nimport React from \"react\";\nimport \"./CombinedHistogram.css\";\n\n// Assume these two datasets are coming from your backend response\ntype CombinedHistogramProps = {\n  width: number;\n  height: number;\n  unhedged: number[];\n  option: number[];\n};\nexport const CombinedHistogram = ({ width, height, unhedged, option }: CombinedHistogramProps) => {\n\n  const [mode, setMode] = useState<\"unhedged\" | \"option\" | \"both\">(\"both\");\n\n  // Calculate shared domain for consistent scaling\n  const domain = useMemo(() => {\n    const allValues = [...unhedged, ...option];\n    const min = Math.min(...allValues);\n    const max = Math.max(...allValues);\n    return [min, max] as [number, number];\n  }, [unhedged, option]);\n\n  const renderHistogram = () => {\n    const sharedProps = {\n      width,\n      height,\n      domain\n    };\n\n    if (mode === \"both\") {\n      const groups = [\n        { name: \"Unhedged\", values: unhedged, id: \"unhedged\" },\n        { name: \"Option\", values: option, id: \"option\" },\n      ];\n      return <HistogramGroup {...sharedProps} data={groups} />;\n    } else if (mode === \"unhedged\") {\n      return <HistogramSingle {...sharedProps} data={unhedged} groupId=\"unhedged\" />;\n    } else if (mode === \"option\") {\n      return <HistogramSingle {...sharedProps} data={option} groupId=\"option\" />;\n    }\n  };\n\n  return (\n    <div className=\"histogram-container\">\n      <div className=\"button-group\">\n        <button \n          className={`histogram-button ${mode === \"unhedged\" ? \"active\" : \"\"}`} \n          onClick={() => setMode(\"unhedged\")}\n        >\n          Unhedged Revenue\n        </button>\n        <button \n          className={`histogram-button ${mode === \"option\" ? \"active\" : \"\"}`}\n          onClick={() => setMode(\"option\")}\n        >\n          Option Revenue\n        </button>\n        <button \n          className={`histogram-button ${mode === \"both\" ? \"active\" : \"\"}`}\n          onClick={() => setMode(\"both\")}\n        >\n          Both\n        </button>\n      </div>\n      <div style={{ position: 'relative', width, height }}>\n        {renderHistogram()}\n      </div>\n    </div>\n  );\n};\n\nexport default CombinedHistogram;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}