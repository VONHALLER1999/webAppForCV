{"ast":null,"code":"var _jsxFileName = \"/Users/vilhelmgroenbaek/DevProjects/webAppForCV/frontend/src/HistogramGroup.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport React from \"react\";\nimport Rectangle from \"./Rectangle.tsx\"; // Add this import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MARGIN = {\n  top: 30,\n  right: 30,\n  bottom: 40,\n  left: 50\n};\nconst BUCKET_NUMBER = 70;\nconst BUCKET_PADDING = 4;\nconst COLORS = [\"#FF0F7B\",\n// Electric pink\n\"#00FFB3\",\n// Neon aqua\n\"#FFE100\",\n// Electric yellow\n\"#7B4DFF\",\n// Bright violet\n\"#FF3D00\" // Neon orange\n];\n\n// Add after COLORS constant\nconst GRADIENTS = {\n  unhedged: [\"#FF0F7B\", \"#FF85B6\"],\n  // Electric pink gradient\n  option: [\"#00FFB3\", \"#7CFFD6\"],\n  // Neon aqua gradient\n  both: [\"#7B4DFF\", \"#B79FFF\"] // Bright violet gradient\n};\n\n// Add id to Group type\n\nexport const HistogramGroup = ({\n  width,\n  height,\n  data,\n  domain\n}) => {\n  _s();\n  const axesRef = useRef(null);\n  const boundsWidth = width - MARGIN.right - MARGIN.left;\n  const boundsHeight = height - MARGIN.top - MARGIN.bottom;\n  const allGroupNames = data.map(group => group.name);\n  const colorScale = d3.scaleOrdinal().domain(allGroupNames).range(COLORS);\n  const xScale = useMemo(() => {\n    return d3.scaleLinear().domain(domain).range([10, boundsWidth]).nice();\n  }, [domain, boundsWidth]);\n  const bucketGenerator = useMemo(() => {\n    return d3.bin().value(d => d).domain(xScale.domain()).thresholds(xScale.ticks(BUCKET_NUMBER));\n  }, [xScale]);\n  const groupBuckets = useMemo(() => {\n    return data.map(group => {\n      return {\n        name: group.name,\n        id: group.id,\n        buckets: bucketGenerator(group.values)\n      };\n    });\n  }, [data, bucketGenerator]);\n  const yScale = useMemo(() => {\n    const max = Math.max(...groupBuckets.map(group => Math.max(...group.buckets.map(bucket => bucket.length))));\n    return d3.scaleLinear().range([boundsHeight, 0]).domain([0, max]).nice();\n  }, [groupBuckets, boundsHeight]); // Added boundsHeight to dependencies\n\n  // Render axes using D3\n  useEffect(() => {\n    const svgElement = d3.select(axesRef.current);\n    svgElement.selectAll(\"*\").remove();\n    const xAxisGenerator = d3.axisBottom(xScale);\n    svgElement.append(\"g\").attr(\"transform\", `translate(0,${boundsHeight})`).call(xAxisGenerator);\n    const yAxisGenerator = d3.axisLeft(yScale);\n    svgElement.append(\"g\").call(yAxisGenerator);\n\n    // Add X axis label\n    svgElement.append(\"text\").attr(\"class\", \"axis-label\").attr(\"text-anchor\", \"middle\").attr(\"x\", boundsWidth / 2).attr(\"y\", boundsHeight + MARGIN.bottom - 5).text(\"Revenue (DKK)\").style(\"fill\", \"var(--text-light)\");\n\n    // Add Y axis label\n    svgElement.append(\"text\").attr(\"class\", \"axis-label\").attr(\"text-anchor\", \"middle\").attr(\"transform\", `translate(${-MARGIN.left + 15},${boundsHeight / 2}) rotate(-90)`).text(\"Frequency\").style(\"fill\", \"var(--text-light)\");\n\n    // Add legend\n    const legend = svgElement.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", `translate(${boundsWidth - 100}, 0)`);\n    data.forEach((group, i) => {\n      const legendRow = legend.append(\"g\").attr(\"transform\", `translate(0, ${i * 20})`);\n      legendRow.append(\"rect\").attr(\"width\", 15).attr(\"height\", 15).attr(\"fill\", colorScale(group.name));\n      legendRow.append(\"text\").attr(\"x\", 20).attr(\"y\", 12).text(group.name).style(\"fill\", \"var(--text-light)\").style(\"font-size\", \"12px\");\n    });\n  }, [xScale, yScale, boundsHeight, boundsWidth, data, colorScale]);\n\n  // First, add the gradient definitions\n  const gradientDefs = /*#__PURE__*/_jsxDEV(\"defs\", {\n    children: Object.entries(GRADIENTS).map(([id, [startColor, endColor]]) => /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n      id: `gradient-${id}`,\n      gradientTransform: \"rotate(90)\",\n      children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"0%\",\n        stopColor: startColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"100%\",\n        stopColor: endColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n\n  // Update the allRects mapping\n  const allRects = groupBuckets.map((group, i) => group.buckets.map((bucket, j) => {\n    const {\n      x0,\n      x1\n    } = bucket;\n    if (x0 === undefined || x1 === undefined) return null;\n\n    // Use gradient fill based on group name\n    const gradientId = `url(#gradient-${group.name.toLowerCase()})`;\n    return /*#__PURE__*/_jsxDEV(Rectangle, {\n      fill: gradientId,\n      x: xScale(x0) + BUCKET_PADDING / 2,\n      width: xScale(x1) - xScale(x0) - BUCKET_PADDING,\n      y: yScale(bucket.length),\n      height: boundsHeight - yScale(bucket.length)\n    }, `${group.id}_${j}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this);\n  }));\n\n  // Update the return statement to include the gradientDefs\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: [gradientDefs, /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${MARGIN.left},${MARGIN.top})`,\n      children: allRects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      ref: axesRef,\n      transform: `translate(${MARGIN.left},${MARGIN.top})`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(HistogramGroup, \"VItzWw56gDN0uCd8DlFNSNSTkkc=\");\n_c = HistogramGroup;\nexport default HistogramGroup;\nvar _c;\n$RefreshReg$(_c, \"HistogramGroup\");","map":{"version":3,"names":["useEffect","useMemo","useRef","d3","React","Rectangle","jsxDEV","_jsxDEV","MARGIN","top","right","bottom","left","BUCKET_NUMBER","BUCKET_PADDING","COLORS","GRADIENTS","unhedged","option","both","HistogramGroup","width","height","data","domain","_s","axesRef","boundsWidth","boundsHeight","allGroupNames","map","group","name","colorScale","scaleOrdinal","range","xScale","scaleLinear","nice","bucketGenerator","bin","value","d","thresholds","ticks","groupBuckets","id","buckets","values","yScale","max","Math","bucket","length","svgElement","select","current","selectAll","remove","xAxisGenerator","axisBottom","append","attr","call","yAxisGenerator","axisLeft","text","style","legend","forEach","i","legendRow","gradientDefs","children","Object","entries","startColor","endColor","gradientTransform","offset","stopColor","fileName","_jsxFileName","lineNumber","columnNumber","allRects","j","x0","x1","undefined","gradientId","toLowerCase","fill","x","y","transform","ref","_c","$RefreshReg$"],"sources":["/Users/vilhelmgroenbaek/DevProjects/webAppForCV/frontend/src/HistogramGroup.tsx"],"sourcesContent":["import { useEffect, useMemo, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport React from \"react\";\nimport Rectangle from \"./Rectangle.tsx\";  // Add this import\n\nconst MARGIN = { top: 30, right: 30, bottom: 40, left: 50 };\nconst BUCKET_NUMBER = 70;\nconst BUCKET_PADDING = 4;\nconst COLORS = [\n  \"#FF0F7B\",  // Electric pink\n  \"#00FFB3\",  // Neon aqua\n  \"#FFE100\",  // Electric yellow\n  \"#7B4DFF\",  // Bright violet\n  \"#FF3D00\"   // Neon orange\n];\n\n// Add after COLORS constant\nconst GRADIENTS = {\n  unhedged: [\"#FF0F7B\", \"#FF85B6\"], // Electric pink gradient\n  option: [\"#00FFB3\", \"#7CFFD6\"],    // Neon aqua gradient\n  both: [\"#7B4DFF\", \"#B79FFF\"]       // Bright violet gradient\n};\n\ntype Group = { name: string; values: number[]; id: string }; // Add id to Group type\ntype HistogramGroupProps = {\n  width: number;\n  height: number;\n  data: Group[];\n  domain: [number, number];\n};\n\n\nexport const HistogramGroup = ({ width, height, data, domain }: HistogramGroupProps) => {\n  const axesRef = useRef(null);\n  const boundsWidth = width - MARGIN.right - MARGIN.left;\n  const boundsHeight = height - MARGIN.top - MARGIN.bottom;\n\n  const allGroupNames = data.map((group) => group.name);\n  const colorScale = d3\n    .scaleOrdinal<string>()\n    .domain(allGroupNames)\n    .range(COLORS);\n\n    const xScale = useMemo(() => {\n      return d3.scaleLinear()\n        .domain(domain)\n        .range([10, boundsWidth])\n        .nice();\n    }, [domain, boundsWidth]);\n\n  const bucketGenerator = useMemo(() => {\n    return d3\n      .bin()\n      .value((d) => d)\n      .domain(xScale.domain() as [number, number])\n      .thresholds(xScale.ticks(BUCKET_NUMBER));\n  }, [xScale]);\n\n  const groupBuckets = useMemo(() => {\n    return data.map((group) => {\n      return { name: group.name, id: group.id, buckets: bucketGenerator(group.values) };\n    });\n  }, [data, bucketGenerator]);\n\n  const yScale = useMemo(() => {\n    const max = Math.max(\n      ...groupBuckets.map((group) =>\n        Math.max(...group.buckets.map((bucket) => bucket.length))\n      )\n    );\n    return d3.scaleLinear().range([boundsHeight, 0]).domain([0, max]).nice();\n  }, [groupBuckets, boundsHeight]); // Added boundsHeight to dependencies\n\n  // Render axes using D3\n  useEffect(() => {\n    const svgElement = d3.select(axesRef.current);\n    svgElement.selectAll(\"*\").remove();\n\n    const xAxisGenerator = d3.axisBottom(xScale);\n    svgElement\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${boundsHeight})`)\n      .call(xAxisGenerator);\n\n    const yAxisGenerator = d3.axisLeft(yScale);\n    svgElement.append(\"g\").call(yAxisGenerator);\n\n    // Add X axis label\n    svgElement\n      .append(\"text\")\n      .attr(\"class\", \"axis-label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"x\", boundsWidth / 2)\n      .attr(\"y\", boundsHeight + MARGIN.bottom - 5)\n      .text(\"Revenue (DKK)\")\n      .style(\"fill\", \"var(--text-light)\");\n\n    // Add Y axis label\n    svgElement\n      .append(\"text\")\n      .attr(\"class\", \"axis-label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", `translate(${-MARGIN.left + 15},${boundsHeight / 2}) rotate(-90)`)\n      .text(\"Frequency\")\n      .style(\"fill\", \"var(--text-light)\");\n\n    // Add legend\n    const legend = svgElement\n      .append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", `translate(${boundsWidth - 100}, 0)`);\n\n    data.forEach((group, i) => {\n      const legendRow = legend\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${i * 20})`);\n\n      legendRow\n        .append(\"rect\")\n        .attr(\"width\", 15)\n        .attr(\"height\", 15)\n        .attr(\"fill\", colorScale(group.name));\n\n      legendRow\n        .append(\"text\")\n        .attr(\"x\", 20)\n        .attr(\"y\", 12)\n        .text(group.name)\n        .style(\"fill\", \"var(--text-light)\")\n        .style(\"font-size\", \"12px\");\n    });\n  }, [xScale, yScale, boundsHeight, boundsWidth, data, colorScale]);\n\n  // First, add the gradient definitions\n  const gradientDefs = (\n    <defs>\n      {Object.entries(GRADIENTS).map(([id, [startColor, endColor]]) => (\n        <linearGradient key={id} id={`gradient-${id}`} gradientTransform=\"rotate(90)\">\n          <stop offset=\"0%\" stopColor={startColor} />\n          <stop offset=\"100%\" stopColor={endColor} />\n        </linearGradient>\n      ))}\n    </defs>\n  );\n\n  // Update the allRects mapping\n  const allRects = groupBuckets.map((group, i) =>\n    group.buckets.map((bucket, j) => {\n      const { x0, x1 } = bucket;\n      if (x0 === undefined || x1 === undefined) return null;\n      \n      // Use gradient fill based on group name\n      const gradientId = `url(#gradient-${group.name.toLowerCase()})`;\n      \n      return (\n        <Rectangle\n          key={`${group.id}_${j}`}\n          fill={gradientId}\n          x={xScale(x0) + BUCKET_PADDING / 2}\n          width={xScale(x1) - xScale(x0) - BUCKET_PADDING}\n          y={yScale(bucket.length)}\n          height={boundsHeight - yScale(bucket.length)}\n        />\n      );\n    })\n  );\n\n  // Update the return statement to include the gradientDefs\n  return (\n    <svg width={width} height={height}>\n      {gradientDefs}\n      <g transform={`translate(${MARGIN.left},${MARGIN.top})`}>\n        {allRects}\n      </g>\n      <g ref={axesRef} transform={`translate(${MARGIN.left},${MARGIN.top})`} />\n    </svg>\n  );\n};\n\n\nexport default HistogramGroup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}